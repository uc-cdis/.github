name: Node.js CI

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version'
        required: true
        type: string
      npm-version:
        description: 'NPM version'
        required: false
        type: string
        default: '8.5'
      pre-test:
        description: 'Pre-test command'
        required: false
        type: string
        default: ''
      post-test:
        description: 'Post-test command'
        required: false
        type: string
        default: ''

jobs:
  test-generic-unit-test:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm ci
      - run: npm run build --if-present
      - run: ${{ inputs.pre-test }}
        working-directory: ./src
      - run: npm test
      - run: ${{ inputs.post-test }}
 # run testSchema.sh if it exists
      - run: |
          if [ -f ${GITHUB_WORKSPACE}/testSchema.sh ]; then
            bash ${GITHUB_WORKSPACE}/testSchema.sh
          fi

  test-data-portal:

    runs-on: ubuntu-latest
    if: ${{ github.repository == 'uc-cdis/data-portal' }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install -g npm@${{ inputs.npm-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run relay
      - run: npm run params
      - run: npm test
      - run: |
          bash ${GITHUB_WORKSPACE}/testSchema.sh

  test-gen3-ui-component:

    runs-on: ubuntu-latest
    if: ${{ github.repository == 'uc-cdis/gen3-ui-component' }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install -g npm@${{ inputs.npm-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - run: |
          if [ -f ${GITHUB_WORKSPACE}/testSchema.sh ]; then
            bash ${GITHUB_WORKSPACE}/testSchema.sh
          fi
