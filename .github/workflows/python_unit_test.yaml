name: Run Python unit tests using Poetry, with a Postgres backend

on:
  workflow_call:
    inputs:
      setup-script:
        description: 'A Bash script in the tests directory of the Python repo that handles any setup needed for testing'
        required: false
        default: 'ci_setup.sh'
        type: string
      test-script:
        description: 'A Bash script in the tests directory of the Python repo that handles running tests'
        required: false
        default: 'ci_commands_script.sh'
        type: string
      python-version:
        description: 'The Python version to use and defaults to latest'
        required: false
        default: '3.9'
        type: string
      postgres-needed:
        description: 'Whether or not a Postgres backend is needed'
        required: false
        default: 'false'
        type: string

env:
  PGPASSWORD: postgres

jobs:
  run_tests:
    runs-on: ubuntu-latest

    #Defining the Postgres DB service we will need to run the unit tests if postgres-needed is true
    services:
      postgres:
        image: postgres:9.6-bullseye
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install poetry
        run: |
          pip install --upgrade pip
          pip version
          pip install poetry
          poetry install -vv
      - name: Run the service-specific setup script, if it exists
        run: |
          if [ -f tests/${{ env.setup-script }} ]; then
            bash -c tests/{{ env.setup-script }}
            echo "Successfully found and ran setup script {{ env.setup-script}} "
          else
            echo "Could not find {{ env.setup-script }} in the tests directory"
          fi
      - name: Run test
        run: |
          bash -c tests/{{ env.test-script }}
