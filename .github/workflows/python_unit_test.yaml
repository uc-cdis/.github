name: Run Python unit tests using Poetry, with a Postgres backend

on:
  workflow_call:
    inputs:
      setup-script-location:
        description: 'A URL identifying a Bash script that can run commands needed for service-specific test setup'
        required: false
        default: 'default_ci_setup.sh'
        type: string
      python-version:
        description: 'The Python version to use and defaults to latest'
        required: false
        default: '3.9'
        type: string
      postgres-needed:
        description: 'Whether or not a Postgres backend is needed'
        required: false
        default: 'false'
        type: string

env:
  PGPASSWORD: postgres

jobs:
  run_tests:
    runs-on: ubuntu-latest


    #Defining the Postgres DB service we will need to run the unit tests if postgres-needed is true
    services:
      #if this service is needed, we will run the postgres container
      postgres:
        if: ${{ inputs.postgres-needed == 'true' }}
        image: postgres:9.6-bullseye
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install poetry
        run: |
          pip install --upgrade pip
          pip version
          pip install poetry
          poetry install -vv
      - name: Service specific setup
        run: |
          curl -sSL "${{inputs.setup-script-location}}" | bash
      - name: Run test
        run: |
          poetry run pytest -vv
