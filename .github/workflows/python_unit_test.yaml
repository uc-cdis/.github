name: Run Python unit tests using Poetry, with a Postgres backend

on: 
  workflow_call:
    inputs:
      setup-script-location:
        description: 'A URL identifying a Bash script that can run commands needed for service-specific test setup'
        required: true
        type: string
      dependency-file-location:
        description: 'A URL identifying a pip dependency file that specifies all the libraries needed'
        required: true
        type: string
      python-versions:
        description: 'The version of Python to run the unit tests against. Expected to be a string representing an array of versions, this construct is needed due to limitations with Github Actions'
        required: false
        type: string
        default: ["3.6.7"]
    
env: 
  PGPASSWORD: postgres

jobs:
  run_tests:
    runs-on: ubuntu-latest
    
    strategy: 
      matrix:
        versions: ${{ fromJson(inputs.python-versions) }}
    
    #Defining the Postgres DB service we will need to run the unit tests
    services:
      postgres:
        image: postgres:9.6-bullseye
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: "${{inputs.python-version}}"
      - name: Install python pre-reqs
        run: |
            curl -sSL "${{inputs.dependency-file-location}}" > requirements.txt && pip install -r requirements.txt 
      - name: Install poetry
        run: |
            pip --version
            pip install poetry
            poetry install -vv
      - name: Service specific setup
        run: |
            curl -sSL "${{inputs.setup-script-location}}" | bash
      - name: Run test
        run: | 
          poetry run pytest -vv --cov=fence --cov=migrations/versions --cov-report xml tests 
