name: Build Image and Push to Registries

on:
  workflow_call:
    inputs:
      USE_AWS_ECR:
        description: "Set this to true if you want to use Amazon's Elastic Container Registry for storing your Docker images."
        required: false
        type: boolean
        default: true
      AWS_ECR_REGISTRY:
        description: "Path to the AWS ECR registry to which the image will be pushed."
        required: false
        type: string
        default: "707767160287.dkr.ecr.us-east-1.amazonaws.com"
      AWS_REGION:
        description: "The AWS region where your resources are located."
        required: false
        type: string
        default: "us-east-1"
      USE_QUAY:
        description: "Set this to true if you want to use Quay.io for storing your Docker images."
        required: false
        type: boolean
        default: true
      DOCKERFILE_LOCATION:
        description: "Relative path to the Dockerfile that will be built."
        required: false
        type: string
        default: "./Dockerfile"
      DOCKERFILE_BUILD_CONTEXT:
        description: "The path to your project directory which contains the Dockerfile."
        required: false
        type: string
        default: "."
      DOCKER_IMAGE_PLACE:
        description: "The location in the Docker repository where the Docker image will be stored. Used only for AWS ECR."
        required: false
        type: string
        default: "/"
      DOCKER_IMAGE_NAME:
        description: "The name you want to give to your Docker image."
        required: false
        type: string
        default: ""
      DOCKER_IMAGE_TAG:
        description: "The tag you want to assign to your Docker image."
        required: false
        type: string
        default: ""
      OVERRIDE_REPO_NAME:
        description: "DEPRECATED."
        required: false
        type: string
        default: ""
      OVERRIDE_TAG_NAME:
        description: "DEPRECATED."
        required: false
        type: string
        default: ""
      USE_QUAY_ONLY:
        description: "DEPRECATED."
        required: false
        type: boolean
        default: false
      BUILD_PLATFORMS:
        description: "Indicates the specific platforms for which to build the image. Multiple platforms can be specified, separated by commas."
        required: false
        type: string
        default: "linux/amd64, linux/arm64"
    secrets:
      ECR_AWS_ACCESS_KEY_ID:
        required: true
      ECR_AWS_SECRET_ACCESS_KEY:
        required: true
      QUAY_USERNAME:
        required: true
      QUAY_ROBOT_TOKEN:
        required: true

jobs:
  ci:
    name: Build Image and Push
    runs-on: ubuntu-latest
    steps:
      - name: Handle Inputs
        shell: bash
        run: |
          set -x

          echo "USE_AWS_ECR=${{ inputs.USE_AWS_ECR }}" >> $GITHUB_ENV
          echo "AWS_ECR_REGISTRY=${{ inputs.AWS_ECR_REGISTRY }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ inputs.AWS_REGION }}" >> $GITHUB_ENV
          echo "USE_QUAY=${{ inputs.USE_QUAY }}" >> $GITHUB_ENV
          echo "DOCKERFILE_LOCATION=${{ inputs.DOCKERFILE_LOCATION }}" >> $GITHUB_ENV
          echo "DOCKERFILE_BUILD_CONTEXT=${{ inputs.DOCKERFILE_BUILD_CONTEXT }}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_PLACE=${{ inputs.DOCKER_IMAGE_PLACE }}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME=${{ inputs.DOCKER_IMAGE_NAME }}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_TAG=${{ inputs.DOCKER_IMAGE_TAG }}" >> $GITHUB_ENV
          echo "OVERRIDE_REPO_NAME=${{ inputs.OVERRIDE_REPO_NAME }}" >> $GITHUB_ENV
          echo "OVERRIDE_TAG_NAME=${{ inputs.OVERRIDE_TAG_NAME }}" >> $GITHUB_ENV
          echo "USE_QUAY_ONLY=${{ inputs.USE_QUAY_ONLY }}" >> $GITHUB_ENV
          echo "BUILD_PLATFORMS=${{ inputs.BUILD_PLATFORMS }}" >> $GITHUB_ENV

      - name: Handle Deprecated Variables
        shell: bash
        run: |
          set -x

          if [[ -n "${{ env.OVERRIDE_REPO_NAME }}" && -z "${{ env.DOCKER_IMAGE_NAME }}" ]]
          then
            echo "DOCKER_IMAGE_NAME=${{ env.OVERRIDE_REPO_NAME }}" >> $GITHUB_ENV
            echo "Warning: OVERRIDE_REPO_NAME is deprecated. Please use DOCKER_IMAGE_NAME instead."
            echo "DOCKER_IMAGE_PLACE=gen3" >> $GITHUB_ENV
            echo "Warning: Using deprecated configuration, defaulting to \"/gen3/\" sub-path for ECR."
          fi

          if [[ -n "${{ env.OVERRIDE_TAG_NAME }}" && -z "${{ env.DOCKER_IMAGE_TAG }}" ]]
          then
            echo "DOCKER_IMAGE_TAG=${{ env.OVERRIDE_TAG_NAME }}" >> $GITHUB_ENV
            echo "Warning: OVERRIDE_TAG_NAME is deprecated. Please use DOCKER_IMAGE_TAG instead."
            echo "DOCKER_IMAGE_PLACE=gen3" >> $GITHUB_ENV
            echo "Warning: Using deprecated configuration, defaulting to \"/gen3/\" sub-path for ECR."
          fi

          if [[ "${{ env.USE_QUAY_ONLY }}" = "true" ]]
          then
            echo "USE_QUAY=true" >> $GITHUB_ENV
            echo "USE_AWS_ECR=false" >> $GITHUB_ENV
            echo "Warning: USE_QUAY_ONLY is deprecated. Please use USE_QUAY/USE_AWS_ECR instead."
            echo "DOCKER_IMAGE_PLACE=gen3" >> $GITHUB_ENV
            echo "Warning: Using deprecated configuration, defaulting to \"/gen3/\" sub-path for ECR."
          fi

      - name: Set Environmental Variables
        shell: bash
        run: |
          set -x

          if [[ -z "${{ env.DOCKER_IMAGE_NAME }}" ]]
          then
            DOCKER_IMAGE_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')
          else
            DOCKER_IMAGE_NAME=${{ env.DOCKER_IMAGE_NAME }}
          fi
          
          if [[ -z "${{ env.DOCKER_IMAGE_TAG }}" ]]
          then
            DOCKER_IMAGE_TAG=${{ github.head_ref || github.ref_name }}
          else
            DOCKER_IMAGE_TAG=${{ env.DOCKER_IMAGE_TAG }}
          fi

          DOCKER_IMAGE_TAG=$(echo $DOCKER_IMAGE_TAG | tr / _)

          DOCKER_IMAGE_PLACE=${{ env.DOCKER_IMAGE_PLACE }}

          # add "/" at the beginning if it doesn't exist
          if [[ $DOCKER_IMAGE_PLACE != /* ]]
          then
              DOCKER_IMAGE_PLACE="/$DOCKER_IMAGE_PLACE"
          fi

          # add "/" at the end if it doesn't exist
          if [[ $DOCKER_IMAGE_PLACE != */ ]]
          then
              DOCKER_IMAGE_PLACE="$DOCKER_IMAGE_PLACE/"
          fi

          if [[ "${{ env.USE_AWS_ECR }}" = "true" ]]
          then
            AWS_ECR_TAGS="${{ env.AWS_ECR_REGISTRY }}$DOCKER_IMAGE_PLACE$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG"
          fi

          if [[ "${{ env.USE_QUAY }}" = "true" ]]
          then
            QUAY_TAGS="quay.io/cdis/$DOCKER_IMAGE_TAG:$DOCKER_IMAGE_TAG"
          fi

          if [[ -n "$AWS_ECR_TAGS" ]] && [[ -n "$QUAY_TAGS" ]]
          then
            TAGS="$AWS_ECR_TAGS\n$QUAY_TAGS"
            CACHE_FROM="$AWS_ECR_TAGS"
          elif [[ -n $AWS_ECR_TAGS ]]; then
            TAGS="$AWS_ECR_TAGS"
            CACHE_FROM="$AWS_ECR_TAGS"
          elif [[ -n $QUAY_TAGS ]]; then
            TAGS="$QUAY_TAGS"
            CACHE_FROM="$QUAY_TAGS"
          else
            TAGS=""
            CACHE_FROM=""
            echo "No registries defined, bailing out..."
            exit 1
          fi

          {
            echo 'TAGS<<EOF'
            echo -e "$TAGS"
            echo EOF
          } >> "$GITHUB_ENV"

          echo "CACHE_FROM=$CACHE_FROM" >> $GITHUB_ENV

      # https://github.com/docker/login-action#aws-public-elastic-container-registry-ecr
      - name: Login to AWS ECR
        if: ${{ env.USE_AWS_ECR }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AWS_ECR_REGISTRY }}
          username: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: ${{ env.AWS_REGION }}

      # https://github.com/docker/login-action#quayio
      - name: Login to Quay.io
        if: ${{ env.USE_QUAY }}
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/metadata-action
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.TAGS }}

      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.DOCKERFILE_BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE_LOCATION }}
          push: true
          tags: ${{ env.TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.CACHE_FROM }}
          cache-to: type=inline
          platforms: ${{ env.BUILD_PLATFORMS }}
