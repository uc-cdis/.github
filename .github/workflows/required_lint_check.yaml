---
name: Required Lint Check
# this is intended to block on a limited set of required lint remove
#
# For only the optional and more verbose feedback, use the 
# `optional_lint_check.yaml`.
#
# The intention is that thi required lint check, is, well, required to pass and 
# WILL block merges and builds,
# but is much more opinioned and slim in what we error on.
#
# The optional lint check runs on all PRs to provide info
# but doesn't actually block any merge or build
#
on: 
  workflow_call:
    inputs:
      python-version:
        description: 'The Python version to use and defaults to latest'
        required: false
        default: '3.9'
        type: string
jobs:
  build:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          # this is uploaded by the lint-create-config.yaml workflow
          name: linters-config
          path: .github/linters

      - name: Display files
        run: ls -aR 

      - name: Install poetry so virtual env has imports that pylint can check
        # that is poetry's recommended way to install
        run: |
          pip install --upgrade pip
          curl -sSL https://install.python-poetry.org | python -
          pip list
          poetry install -vv --all-extras --no-interaction
          poetry show

      - name: Use Python module path to update necessary linter configs
        run: |
          virtual_env=$(poetry env info --path)
          echo "Python Virtual Env Path: $virtual_env"

          site_packages_folder=$(find $virtual_env -type d -name "site-packages" -print -quit)
          if [ -n "$site_packages_folder" ]; then
            echo "Found 'site-packages' folder at: $site_packages_folder"
          else
            echo "No 'site-packages' folder found in provided virtual env: $virtual_env."
            exit 1
          fi

          echo
          echo "Updating .github/linters/.python-lint"
          echo "init-hook='import sys; sys.path.append(\".\"); sys.path.append(\"/tmp/lint\"); sys.path.append(\"$site_packages_folder\")'"
          {
            echo "[MAIN]"
            echo "init-hook='import sys; sys.path.append(\".\"); sys.path.append(\"/tmp/lint\"); sys.path.append(\"$site_packages_folder\")'"
            tail -n +3 .github/linters/.python-lint
          } > .github/linters/.python-lint.tmp && mv .github/linters/.python-lint.tmp .github/linters/.python-lint


      - name: Cat file(s)
        run: cat .github/linters/.python-lint

      - name: Lint Repo
        uses: github/super-linter/slim@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          LOG_LEVEL: ERROR
          VALIDATE_GO: true
          VALIDATE_PYTHON: true
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_PYTHON_PYLINT: true
